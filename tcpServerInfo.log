2018-04-13 09:38:39 889-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:40)]-init the INSTANCE OF ProcessManager
2018-04-13 09:38:40 519-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 09:38:40 519-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 09:38:40 522-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 09:38:40 528-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:139)]---> dataDir make it OK
2018-04-13 09:38:40 529-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 09:38:40 558-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 09:38:40 559-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 09:38:40 570-[main]-[INFO ]-[Service.isRunning(Service.java:89)]-Service serverRun isRunning
2018-04-13 09:38:40 571-[main]-[INFO ]-[Service.start(Service.java:39)]-Service serverRun start
2018-04-13 09:38:40 573-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:55)]-设置serverbootstrap
2018-04-13 09:38:40 574-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:57)]-设置serverbootstrap
2018-04-13 09:38:40 573-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:42)]-设置HttpBootstrap
2018-04-13 09:38:40 599-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:75)]-处理器设置为daemon
2018-04-13 09:38:40 600-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:78)]-启动处理器进程
2018-04-13 09:38:40 600-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:78)]-处理器设置为daemon
2018-04-13 09:38:40 601-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:81)]-启动处理器进程
2018-04-13 09:38:40 661-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:85)]-listen port=:9152
2018-04-13 09:38:40 662-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:88)]-等待TCP结束..........................
2018-04-13 09:38:40 662-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:88)]-listen port=:9151
2018-04-13 09:38:40 663-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:91)]-等待TCP结束...............................
2018-04-13 09:38:40 663-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:63)]-listen port=:9153
2018-04-13 09:38:40 664-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:64)]-等待HTTP服务结束...
2018-04-13 09:38:41 573-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 09:38:41 576-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 09:38:41 576-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 10:56:30 342-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:40)]-init the INSTANCE OF ProcessManager
2018-04-13 10:56:31 420-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 10:56:31 421-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 10:56:31 423-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 10:56:31 431-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 10:56:31 432-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 10:56:31 459-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 10:56:31 460-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 10:56:31 470-[main]-[INFO ]-[Service.isRunning(Service.java:89)]-Service serverRun isRunning
2018-04-13 10:56:31 470-[main]-[INFO ]-[Service.start(Service.java:39)]-Service serverRun start
2018-04-13 10:56:31 473-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:42)]-设置HttpBootstrap
2018-04-13 10:56:31 473-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:55)]-设置serverbootstrap
2018-04-13 10:56:31 473-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:57)]-设置serverbootstrap
2018-04-13 10:56:31 499-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:75)]-处理器设置为daemon
2018-04-13 10:56:31 500-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:78)]-启动处理器进程
2018-04-13 10:56:31 499-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:78)]-处理器设置为daemon
2018-04-13 10:56:31 502-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:81)]-启动处理器进程
2018-04-13 10:56:31 565-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:85)]-listen port=:9152
2018-04-13 10:56:31 565-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:88)]-listen port=:9151
2018-04-13 10:56:31 566-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:91)]-等待TCP结束...............................
2018-04-13 10:56:31 565-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:63)]-listen port=:9153
2018-04-13 10:56:31 566-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:88)]-等待TCP结束..........................
2018-04-13 10:56:31 568-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:64)]-等待HTTP服务结束...
2018-04-13 10:56:32 473-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 10:56:32 476-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 10:56:32 477-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 11:15:24 287-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:40)]-init the INSTANCE OF ProcessManager
2018-04-13 11:15:25 032-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 11:15:25 033-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 11:15:25 034-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 11:15:25 040-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 11:15:25 041-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 11:15:25 063-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 11:15:25 064-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 11:15:25 072-[main]-[INFO ]-[Service.isRunning(Service.java:89)]-Service serverRun isRunning
2018-04-13 11:15:25 073-[main]-[INFO ]-[Service.start(Service.java:39)]-Service serverRun start
2018-04-13 11:15:25 076-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:57)]-设置serverbootstrap
2018-04-13 11:15:25 077-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:42)]-设置HttpBootstrap
2018-04-13 11:15:25 077-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:55)]-设置serverbootstrap
2018-04-13 11:15:25 104-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:75)]-处理器设置为daemon
2018-04-13 11:15:25 104-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:78)]-处理器设置为daemon
2018-04-13 11:15:25 104-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:78)]-启动处理器进程
2018-04-13 11:15:25 109-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:81)]-启动处理器进程
2018-04-13 11:15:25 153-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:85)]-listen port=:9152
2018-04-13 11:15:25 153-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:63)]-listen port=:9153
2018-04-13 11:15:25 154-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:88)]-等待TCP结束..........................
2018-04-13 11:15:25 154-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:64)]-等待HTTP服务结束...
2018-04-13 11:15:25 158-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:88)]-listen port=:9151
2018-04-13 11:15:25 158-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:91)]-等待TCP结束...............................
2018-04-13 11:15:26 077-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 11:15:26 079-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 11:15:26 080-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 17:54:27 214-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 17:54:28 193-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 17:54:28 193-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 17:54:28 195-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 17:54:28 201-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 17:54:28 201-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 17:54:28 228-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 17:54:28 229-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 17:54:28 239-[main]-[INFO ]-[Service.isRunning(Service.java:89)]-Service serverRun isRunning
2018-04-13 17:54:28 240-[main]-[INFO ]-[Service.start(Service.java:39)]-Service serverRun start
2018-04-13 17:54:40 093-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:55)]-设置serverbootstrap
2018-04-13 17:54:40 093-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:42)]-设置HttpBootstrap
2018-04-13 17:54:41 583-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:75)]-处理器设置为daemon
2018-04-13 17:54:41 584-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:78)]-启动处理器进程
2018-04-13 17:54:41 660-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:80)]-listen port=:9151
2018-04-13 17:54:41 661-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:83)]-等待TCP结束...............................
2018-04-13 17:54:41 663-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:63)]-listen port=:9153
2018-04-13 17:54:41 665-[pool-1-thread-3]-[INFO ]-[WebSocketBootstrap.run(WebSocketBootstrap.java:64)]-等待HTTP服务结束...
2018-04-13 17:54:41 672-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:85)]-listen port=:9152
2018-04-13 17:54:41 672-[pool-1-thread-2]-[INFO ]-[CubeBootstrapLong.run(CubeBootstrapLong.java:88)]-等待TCP结束..........................
2018-04-13 17:54:42 541-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 17:54:42 544-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 17:54:42 545-[pool-1-thread-4]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 17:58:22 562-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 17:58:23 458-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 17:58:23 459-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 17:58:23 461-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 17:58:23 466-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 17:58:23 467-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 17:58:23 471-[main]-[ERROR]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:151)]---> exception : While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
org.rocksdb.RocksDBException: While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
	at org.rocksdb.RocksDB.open(Native Method)
	at org.rocksdb.RocksDB.open(RocksDB.java:231)
	at com.soundgroup.battery.core.common.RocksDBHolder.openRocksDB(RocksDBHolder.java:148)
	at com.soundgroup.battery.core.common.RocksDBHolder.init(RocksDBHolder.java:173)
	at com.soundgroup.battery.conf.BeanConfig.initStorage(BeanConfig.java:51)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.CGLIB$initStorage$1(<generated>)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf$$FastClassBySpringCGLIB$$efe0fa68.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.initStorage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.soundgroup.battery.CubeRun.main(CubeRun.java:29)
2018-04-13 17:59:21 521-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 17:59:22 435-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 17:59:22 436-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 17:59:22 438-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:115)]---> {} not exists, make it failed/data/wal_rocksdb
2018-04-13 17:59:22 445-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 17:59:22 448-[main]-[ERROR]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:151)]---> exception : While mkdir if missing: /data/wal_rocksdb: No such file or directory
org.rocksdb.RocksDBException: While mkdir if missing: /data/wal_rocksdb: No such file or directory
	at org.rocksdb.RocksDB.open(Native Method)
	at org.rocksdb.RocksDB.open(RocksDB.java:231)
	at com.soundgroup.battery.core.common.RocksDBHolder.openRocksDB(RocksDBHolder.java:148)
	at com.soundgroup.battery.core.common.RocksDBHolder.init(RocksDBHolder.java:173)
	at com.soundgroup.battery.conf.BeanConfig.initStorage(BeanConfig.java:51)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.CGLIB$initStorage$6(<generated>)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf$$FastClassBySpringCGLIB$$efe0fa68.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.initStorage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.soundgroup.battery.CubeRun.main(CubeRun.java:29)
2018-04-13 18:00:26 575-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:00:27 467-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:00:27 468-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:00:27 470-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:00:27 476-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:00:27 476-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:00:27 486-[main]-[ERROR]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:151)]---> exception : While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
org.rocksdb.RocksDBException: While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
	at org.rocksdb.RocksDB.open(Native Method)
	at org.rocksdb.RocksDB.open(RocksDB.java:231)
	at com.soundgroup.battery.core.common.RocksDBHolder.openRocksDB(RocksDBHolder.java:148)
	at com.soundgroup.battery.core.common.RocksDBHolder.init(RocksDBHolder.java:173)
	at com.soundgroup.battery.conf.BeanConfig.initStorage(BeanConfig.java:51)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.CGLIB$initStorage$1(<generated>)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf$$FastClassBySpringCGLIB$$efe0fa68.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.initStorage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.soundgroup.battery.CubeRun.main(CubeRun.java:29)
2018-04-13 18:03:01 284-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:03:02 269-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:03:02 270-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:03:02 276-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:03:02 286-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:03:02 287-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:03:13 765-[main]-[ERROR]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:151)]---> exception : While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
org.rocksdb.RocksDBException: While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
	at org.rocksdb.RocksDB.open(Native Method)
	at org.rocksdb.RocksDB.open(RocksDB.java:231)
	at com.soundgroup.battery.core.common.RocksDBHolder.openRocksDB(RocksDBHolder.java:148)
	at com.soundgroup.battery.core.common.RocksDBHolder.init(RocksDBHolder.java:173)
	at com.soundgroup.battery.conf.BeanConfig.initStorage(BeanConfig.java:51)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.CGLIB$initStorage$4(<generated>)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf$$FastClassBySpringCGLIB$$efe0fa68.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.initStorage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.soundgroup.battery.CubeRun.main(CubeRun.java:29)
2018-04-13 18:06:13 284-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:06:14 479-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:06:14 480-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:06:14 482-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:06:14 488-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:06:14 488-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:06:30 660-[main]-[ERROR]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:151)]---> exception : While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
org.rocksdb.RocksDBException: While lock file: data/rocksdb//LOCK: Resource temporarily unavailable
	at org.rocksdb.RocksDB.open(Native Method)
	at org.rocksdb.RocksDB.open(RocksDB.java:231)
	at com.soundgroup.battery.core.common.RocksDBHolder.openRocksDB(RocksDBHolder.java:148)
	at com.soundgroup.battery.core.common.RocksDBHolder.init(RocksDBHolder.java:173)
	at com.soundgroup.battery.conf.BeanConfig.initStorage(BeanConfig.java:51)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.CGLIB$initStorage$1(<generated>)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf$$FastClassBySpringCGLIB$$efe0fa68.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:312)
	at com.soundgroup.battery.conf.BeanConfig$$EnhancerBySpringCGLIB$$3c3e0dcf.initStorage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:166)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:586)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.soundgroup.battery.CubeRun.main(CubeRun.java:29)
2018-04-13 18:07:06 068-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:07:07 055-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:07:07 056-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:07:07 058-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:07:07 065-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:139)]---> dataDir make it OK
2018-04-13 18:07:07 065-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:07:09 556-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 18:07:11 412-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 18:07:11 433-[main]-[INFO ]-[Service.isRunning(Service.java:87)]-Service serverRun isRunning
2018-04-13 18:07:11 434-[main]-[INFO ]-[Service.start(Service.java:37)]-Service serverRun start
2018-04-13 18:08:08 300-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:08:09 083-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:08:09 083-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:08:09 085-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:08:09 091-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:08:09 092-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:08:17 524-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 18:08:17 525-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 18:08:17 545-[main]-[INFO ]-[Service.isRunning(Service.java:87)]-Service serverRun isRunning
2018-04-13 18:08:17 547-[main]-[INFO ]-[Service.start(Service.java:37)]-Service serverRun start
2018-04-13 18:10:14 033-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:10:14 834-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:10:14 834-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:10:14 836-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:10:14 841-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:10:14 842-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:10:16 988-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 18:10:16 989-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 18:10:17 003-[main]-[INFO ]-[Service.isRunning(Service.java:87)]-Service serverRun isRunning
2018-04-13 18:10:17 004-[main]-[INFO ]-[Service.start(Service.java:37)]-Service serverRun start
2018-04-13 18:10:18 246-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:80)]-listen port=:9151
2018-04-13 18:10:18 247-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:83)]-等待TCP结束...............................
2018-04-13 18:10:19 143-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 18:10:19 145-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 18:10:19 146-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 18:12:14 189-[nioEventLoopGroup-4-1]-[ERROR]-[CubeMsg.buildMsg(CubeMsg.java:65)]-sn:对应的conn为空201546
2018-04-13 18:13:38 107-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:13:38 923-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:13:38 924-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:13:38 926-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:13:38 931-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:13:38 932-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:13:40 831-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 18:13:40 832-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 18:13:40 846-[main]-[INFO ]-[Service.isRunning(Service.java:87)]-Service serverRun isRunning
2018-04-13 18:13:40 847-[main]-[INFO ]-[Service.start(Service.java:37)]-Service serverRun start
2018-04-13 18:13:41 455-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:79)]-listen port=:9151
2018-04-13 18:13:41 455-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:82)]-等待TCP结束...............................
2018-04-13 18:13:42 377-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 18:13:42 378-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 18:13:42 379-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 18:14:18 534-[nioEventLoopGroup-4-1]-[ERROR]-[CubeMsg.buildMsg(CubeMsg.java:65)]-sn:对应的conn为空201546
2018-04-13 18:17:26 257-[main]-[INFO ]-[CubeRun.init(ProcessManager.java:36)]-init the INSTANCE OF ProcessManager
2018-04-13 18:17:27 045-[main]-[INFO ]-[RocksDBHolder.setBlockCacheSize(RocksDBHolder.java:80)]---> blockCacheSize = {} GB5
2018-04-13 18:17:27 046-[main]-[INFO ]-[RocksDBHolder.setBlockCacheCompressedSize(RocksDBHolder.java:93)]---> blockCacheCompressedSize = {} GB2
2018-04-13 18:17:27 048-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:110)]---> {} existsdata/wal_rocksdb
2018-04-13 18:17:27 054-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:136)]---> data path is OK : {}data/rocksdb/
2018-04-13 18:17:27 055-[main]-[INFO ]-[RocksDBHolder.initConfig(RocksDBHolder.java:142)]---> Init config OK
2018-04-13 18:17:27 078-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:149)]---> RocksDB data path : {}data/rocksdb/
2018-04-13 18:17:27 079-[main]-[INFO ]-[RocksDBHolder.openRocksDB(RocksDBHolder.java:154)]---> Open RocksDB OK
2018-04-13 18:17:27 088-[main]-[INFO ]-[Service.isRunning(Service.java:87)]-Service serverRun isRunning
2018-04-13 18:17:27 089-[main]-[INFO ]-[Service.start(Service.java:37)]-Service serverRun start
2018-04-13 18:17:27 157-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:79)]-listen port=:9151
2018-04-13 18:17:27 157-[pool-1-thread-1]-[INFO ]-[CubeBootstrap.run(CubeBootstrap.java:82)]-等待TCP结束...............................
2018-04-13 18:17:28 091-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:43)]-设置HttpBootstrap
2018-04-13 18:17:28 095-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:64)]-listen port=:9154
2018-04-13 18:17:28 096-[pool-1-thread-2]-[INFO ]-[HttpBootstrap.run(HttpBootstrap.java:65)]-等待HTTP服务结束...........................
2018-04-13 18:17:57 940-[nioEventLoopGroup-4-1]-[ERROR]-[CubeMsg.buildMsg(CubeMsg.java:65)]-sn:对应的conn为空201546
